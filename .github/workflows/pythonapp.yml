name: Application workflow

on:
  push:
    tags:
      - "*"

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install libcurl4-openssl-dev libssl-dev
        run: sudo apt install libcurl4-openssl-dev libssl-dev
        shell: bash
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: bash
      - name: PyInstaller build
        run: ./build.sh
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: doffa-ubuntu
          path: ./dist/main
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: pwsh
      - name: PyInstaller build
        run: ./build.ps1
        shell: pwsh
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: doffa-win
          path: ./dist/main.exe
  release:
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-windows]

    steps:
      - name: Download artifact from build-ubuntu
        uses: actions/download-artifact@v1
        with:
          name: doffa-ubuntu
          path: ./
      - name: Download artifact from build-win
        uses: actions/download-artifact@v1
        with:
          name: doffa-win
          path: ./
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Ubuntu Release Asset
        id: upload-ubuntu-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./main
          asset_name: doffa-ubuntu
          asset_content_type: application
      - name: Upload Windows Release Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./main.exe
          asset_name: doffa-win
          asset_content_type: application
